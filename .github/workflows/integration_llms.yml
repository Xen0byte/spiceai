---
name: integration tests (llms)

on:
  push:
    branches:
      - trunk
      - release-*
    paths:
      - "crates/llms/**"

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.ref_name == 'trunk' && github.sha || 'any-sha' }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Test Binary
    runs-on: spiceai-runners
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          os: "linux"

      - name: Set up make
        uses: ./.github/actions/setup-make

      - name: Set up cc
        uses: ./.github/actions/setup-cc

      # Build the test binary without running tests
      - name: Build LLMs integration test binary
        run: |
          TEST_BINARY_PATH=$(cargo test -p llms --test integration --no-run --message-format=json | jq -r 'select(.reason == "compiler-artifact" and (.target.kind | contains(["test"])) and .executable != null) | .executable')
          cp $TEST_BINARY_PATH ./llms_integration_test

      # Upload the test binary as an artifact
      - name: Upload test binary
        uses: actions/upload-artifact@v4
        with:
          name: llms-integration-test-binary
          path: ./llms_integration_test
          retention-days: 1

  test:
    name: LLMs Integration Tests
    needs: build
    permissions: read-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          os: "linux"

      # Download the test binary artifact
      - name: Download test binary
        uses: actions/download-artifact@v4
        with:
          name: llms-integration-test-binary
          path: ./integration_test

      - name: Mark test binary as executable
        run: |
          chmod +x ./integration_test/llms_integration_test

      - name: Set up .env file
        run: |
          echo 'SPICE_OPENAI_API_KEY="${{ secrets.SPICE_SECRET_OPENAI_API_KEY }}"' > .env
          echo 'SPICE_ANTHROPIC_API_KEY="${{ secrets.SPICE_SECRET_ANTHROPIC_API_KEY }}"' >> .env
          echo 'SPICE_XAI_API_KEY="${{ secrets.SPICE_SECRET_XAI_API_KEY }}"' >> .env

        # Don't run local models in the integration test yet.
      - name: Run integration test
        env:
          SPICE_SECRET_OPENAI_API_KEY: ${{ secrets.SPICE_SECRET_OPENAI_API_KEY }}
          SPICE_SECRET_ANTHROPIC_API_KEY: ${{ secrets.SPICE_SECRET_ANTHROPIC_API_KEY }}
          SPICE_SECRET_XAI_API_KEY: ${{ secrets.SPICE_SECRET_XAI_API_KEY }}
        run: |
          if [ -z "$SPICE_SECRET_OPENAI_API_KEY" ] ; then
            echo "Error: OpenAI API key is not defined."
            exit 1
          fi
          if [ -z "$SPICE_SECRET_ANTHROPIC_API_KEY" ] ; then
            echo "Error: Anthropic API key is not defined."
            exit 1
          fi
          if [ -z "$SPICE_SECRET_XAI_API_KEY" ] ; then
            echo "Error: xAI API key is not defined."
            exit 1
          fi
          export MODEL_SKIPLIST="hf_phi3,local_phi3"
          INSTA_WORKSPACE_ROOT="${PWD}" CARGO_MANIFEST_DIR="${PWD}" ./integration_test/llms_integration_test --nocapture
